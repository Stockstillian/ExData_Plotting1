gpsimp(0.1,0.6,100,10)
gpsimp
}
gpsimp
gpsimp <- function(a)
2
View(gpsimp)
View(gpsimp)
gpsimp(0.1,0.6,100,10)
2+2
gpsimp <- function(a[1:4])
a=0,0,0,0
a=(0,0,0,0)
a=c(0,0,0,0)
a
gpsimp <- function(a[1:4])
gpsimp <- function(a)
0
gpsimp(0.1,0.6,100,10)
gpsimp <- function(a)
0
}
}
gpsimp(0.1,0.6,100,10)
a<=0.1,0.6,100,10
a=0.1,0.6,100,10
a=c(0.1,0.6,100,10)
gpsimp(a)
n1=0
View(gpsimp)
View(gpsimp)
View(gpsimp)
View(gpsimp)
View(gpsimp)
View(gpsimp)
unfunction gpsimp
unfunction(gpsimp)
rm(gpsimp)
n2=0
a
aff=as.integer(a[1]*a[3])
aff=integer(a[1]*a[3])
as.integer(a[1]*a[3])
as.integer(0.122334*a[3])
a[4]
if(runif(1,0,1)<=a[2]) n1=n1+1
end
}
gpsimp <- function(a)
#a=(affected population percentage, percent passage in affected
#   unaffected pairing, population size, iterations)
aff=as.integer(a[1]*a[3])
unaff=a[3]-aff
for(i in 1:a[4]){
n1=0
n2=0
for(j in 1:a[3]){
if(runif(1,0,a[3])<=aff){
if(runif(1,0,a[3])<=aff){
n1=n1+1
else {
if(runif(1,0,1)<=a[2]) n1=n1+1
else n2=n2+1
}
}
else n2=n2+1
}
}
}
source('~/R/functions/gpsimp.R')
as.integer(a[1]*a[3])
aff=as.integer(a[1]*a[3])
source('~/R/functions/gpsimp.R')
source('~/R/functions/gpsimp.R')
round(a[1]*a[3])
aff=round(a[1]*a[3])
gpsimp(a)
unaff=a[3]-aff
gpsimp(a)
source('~/R/functions/gpsimp.R')
else n2=n2+1
source('~/R/functions/gpsimp.R')
source('~/R/functions/gpsimp.R')
gpsimp(a)
source('~/R/functions/gpsimp.R')
source('~/R/functions/gpsimp.R')
gpsimp(a)
source('~/R/functions/gpsimp.R')
source('~/R/functions/gpsimp.R')
gpsimp(a)
a[4]=1
gpsimp(a)
aff=round(a[1]*a[3])
gpsimp(a)
source('~/R/functions/gpsimp.R')
gpsimp(a)
for(j in 1:a[3]) {
n1=0
n2=0
if(runif(1,0,a[3])<=aff){
if(runif(1,0,a[3])<=aff) n1=n1+1
else {
if(runif(1,0,1)<=a[2]) n1=n1+1
else n2=n2+1
}
}
else {
if(runif(1,0,a[3])>aff) n2=n2+1
else {
if(runif(1,0,1)<=a[2]) n1=n1+1
else n2=n2+1
}
}
}
aff=10
for(j in 1:a[3]) {
n1=0
n2=0
if(runif(1,0,a[3])<=aff){
if(runif(1,0,a[3])<=aff) n1=n1+1
else {
if(runif(1,0,1)<=a[2]) n1=n1+1
else n2=n2+1
}
}
else {
if(runif(1,0,a[3])>aff) n2=n2+1
else {
if(runif(1,0,1)<=a[2]) n1=n1+1
else n2=n2+1
}
}
}
source('~/R/functions/gpsimp.R')
a[4]=100
gpsimp(a)
gpsimp(a)
source('~/R/functions/gpsimp.R')
a[4]=10
gpsimp(a)
a[4]=5
gpsimp(a)
gpsimp(a)
}
source('~/R/functions/gpsimp.R')
source('~/R/functions/gpsimp.R')
aff=5
source('~/R/functions/gpsimp.R')
source('~/R/functions/gpsimp.R')
source('~/R/functions/gpsimp.R')
source('~/R/functions/gpsimp.R')
source('~/R/functions/gpsimp.R')
aff=round(a[1]*a[3])
source('~/R/functions/gpsimp.R')
source('~/R/functions/gpsimp.R')
source('~/R/functions/gpsimp.R')
source('~/R/functions/gpsimp.R')
source('~/R/functions/gpsimp.R')
source('~/R/functions/gpsimp.R')
aff=round(a[1]*a[3])
source('~/R/functions/gpsimp.R')
source('~/R/functions/gpsimp.R')
source('~/R/functions/gpsimp.R')
source('~/R/functions/gpsimp.R')
source('~/R/functions/gpsimp.R')
source('~/R/functions/gpsimp.R')
source('~/R/functions/gpsimp.R')
source('~/R/functions/gpsimp.R')
source('~/R/functions/gpsimp.R')
source('~/R/functions/gpsimp.R')
source('~/R/functions/gpsimp.R')
aff=round(a[1]*a[3])
aff<-round(a[1]*a[3])
source('~/R/functions/gpsimp.R')
source('~/R/functions/gpsimp.R')
source('~/R/functions/gpsimp.R')
source('~/R/functions/gpsimp.R')
source('~/R/functions/gpsimp.R')
aff=round(a[1]*a[3])
unaff=a[3]-aff
for(i in 1:a[4]){
n1=0
n2=0
for(j in 1:a[3]) {
if(runif(1,0,a[3])<=aff){
if(runif(1,0,a[3])<=aff) n1=n1+1
else
gpsimp <- function(a)
#a=(affected population percentage, percent passage in affected
#   unaffected pairing, population size, iterations)
aff=round(a[1]*a[3])
unaff=a[3]-aff
for(i in 1:a[4]){
n1=0
n2=0
for(j in 1:a[3]) {
if(runif(1,0,a[3])<=aff){
if(runif(1,0,a[3])<=aff) n1=n1+1
else
if(runif(1,0,1)<=a[2]) n1=n1+1
else n2=n2+1
}
else
if(runif(1,0,a[3])>aff) n2=n2+1
else
if(runif(1,0,1)<=a[2]) n1=n1+1
else n2=n2+1
}
aff=n1
unaff=n2
}
0
}
}
gpsimp <- function(a)
#a=(affected population percentage, percent passage in affected
#   unaffected pairing, population size, iterations)
aff=round(a[1]*a[3])
unaff=a[3]-aff
for(i in 1:a[4]){
n1=0
n2=0
for(j in 1:a[3]) {
if(runif(1,0,a[3])<=aff){
if(runif(1,0,a[3])<=aff) n1=n1+1
else
if(runif(1,0,1)<=a[2]) n1=n1+1
else n2=n2+1
}
else
if(runif(1,0,a[3])>aff) n2=n2+1
else
if(runif(1,0,1)<=a[2]) n1=n1+1
else n2=n2+1
}
aff=n1
unaff=n2
}
gpsimp <- function(a)
#a=(affected population percentage, percent passage in affected
#   unaffected pairing, population size, iterations)
aff=round(a[1]*a[3])
unaff=a[3]-aff
for(i in 1:a[4]){
n1=0
n2=0
for(j in 1:a[3]) {
if(runif(1,0,a[3])<=aff){
if(runif(1,0,a[3])<=aff) n1=n1+1
else
if(runif(1,0,1)<=a[2]) n1=n1+1
else n2=n2+1
}
else
if(runif(1,0,a[3])>aff) n2=n2+1
else
if(runif(1,0,1)<=a[2]) n1=n1+1
else n2=n2+1
}
aff=n1
unaff=n2
}
0
/
source('~/R/functions/gpsimp.R')
gpsimp(a)
gpsimp(a)
gpsimp(a)
gpsimp(a)
gpsimp(a)
a=c(.05, 0.6, 1000, 5)
gpsimp(a)
gpsimp(a)
gpsimp(a)
gpsimp(0.1,0.6,100,5)
source('~/R/functions/gpsimp.R')
source('~/R/functions/gpsimp.R')
source('~/R/functions/gpsimp.R')
gpsimp(0.1,0.6,100,5)
gpsimp(0.1,0.6,100,5)
gpsimp(0.1,0.6,100,5)
source('~/R/functions/gpsimp.R')
source('~/R/functions/gpsimp.R')
source('~/R/functions/gpsimp.R')
source('~/R/functions/gpsimp.R')
c(a,b,c,d)=a
c(a,b,c,d)<-a
(a,b,c,d)<-a
a=.01
b=0.6
a=.1
c=100
d=5
source('~/R/functions/gpsimp.R')
source('~/R/functions/gpsimp.R')
source('~/R/functions/gpsimp.R')
source('~/R/functions/gpsimp.R')
source('~/R/functions/gpsimp.R')
source('~/R/functions/gpsimp.R')
source('~/R/functions/gpsimp.R')
gpsimp(0.1,0.6,100,5)
source('~/R/functions/gpsimp.R')
source('~/R/functions/gpsimp.R')
source('~/R/functions/gpsimp.R')
gpsimp(0.1,0.6,100,5)
gpsimp(0.1,0.6,100,5)
gpsimp(0.1,0.6,100,5)
source('~/R/functions/gpsimp.R')
source('~/R/functions/gpsimp.R')
gpsimp(0.1,0.6,100,5)
source('~/R/functions/gpsimp.R')
gpsimp(0.1,0.6,100,5)
source('~/R/functions/gpsimp.R')
gpsimp(0.1,0.6,100,5)
gpsimp(0.1,0.6,100,5)
gpsimp(0.1,0.6,100,5)
gpsimp(0.1,0.6,100,5)
gpsimp(0.1,0.6,100,5)
gpsimp(0.1,0.6,100,5)
gpsimp(0.1,0.6,100,10)
gpsimp(0.1,0.6,100,100)
gpsimp(0.1,0.6,100,100)
gpsimp(0.1,0.6,100,100)
gpsimp(0.1,0.6,100,100)
gpsimp(0.1,0.6,100,100)
gpsimp(0.1,0.6,100,100)
gpsimp(0.1,0.6,100,100)
gpsimp(0.1,0.6,100,100)
gpsimp(0.1,0.6,100,100)
gpsimp(0.1,0.6,100,100)
gpsimp(0.1,0.6,100,100)
gpsimp(0.1,0.6,100,100)
gpsimp(0.1,0.6,100,10)
gpsimp(0.1,0.6,100,10)
gpsimp(0.1,0.6,100,10)
gpsimp(0.1,0.6,100,10)
gpsimp(0.1,0.6,100,10)
gpsimp(0.1,0.6,100,10)
gpsimp(0.1,0.6,100,10)
gpsimp(0.1,0.6,100,10)
gpsimp(0.1,0.6,100,10)
gpsimp(0.1,0.6,100,10)
gpsimp(0.1,0.6,100,10)
gpsimp(0.1,0.6,100,10)
gpsimp(0.1,0.6,100,10)
e=c(1:10)
e=dim(5)
e[1]
e[1]=1
e[2]=1
e=1
e[2]=1
source('~/R/functions/gpsimp.R')
gpsimp(0.1,0.6,100,10)
source('~/R/functions/gpsimp.R')
gpsimp(0.1,0.6,100,10)
result[1]=50
source('~/R/functions/gpsimp.R')
gpsimp(0.1,0.6,100,10)
gpsimp(0.1,0.6,100,10)
gpsimp(0.1,0.6,100,10)
gpsimp(0.1,0.6,100,10)
gpsimp(0.1,0.6,100,10)
gpsimp(0.1,0.6,100,10)
gpsimp(0.1,0.6,100,100)
source('~/R/functions/gpsimp.R')
source('~/R/functions/gpsimp.R')
gpsimp(0.1,0.6,100,100)
gpsimp(0.1,0.6,100,100)
gpsimp(0.1,0.6,100,100)
source('~/R/functions/gpsimp.R')
gpsimp(0.1,0.6,100,100)
gpsimp(0.1,0.6,1000,100)
gpsimp(0.1,0.6,10000,100)
gpsimp(0.01,0.6,1000,100)
gpsimp(0.01,0.6,10000,100)
gpsimp(0.001,0.6,10000,100)
gpsimp(0.001,0.6,10000,100)
source('~/R/functions/gpsimp.R')
gpsimp(0.01,0.6,10000,100)
?gpsimp
??gpsimp
gpsimp(.01,.6,10000,100)
source('~/R/functions/gpsimp.R')
a=0.01
b=0.6
c=10000
d=100
source('~/R/functions/gpsimp.R')
source('~/R/functions/gpsimp.R')
source('~/R/functions/gpsimp.R')
source('~/R/functions/gpsimp.R')
gpsimp(.01,.6,10000,100)
source('~/R/functions/gpsimp.R')
user="Kelby"
user=Kelby
round(runif(10,0,10))
read.table("household_power_consumption.txt")
data = read.table("household_power_consumption.txt")
data = read.table("household_power_consumption.txt", sep=";")
View(data)
data = read.table("household_power_consumption.txt", row.names = 1, sep=";")
data = read.delim("household_power_consumption.txt", sep=";")
View(data)
?strptime()
?as.Date
getclass(data$date)
getclass(data$Date)
getclass("data$Date")
getclass(1)
?getClass
getClass(1)
getClass(data$Date)
getclass("data$Date")
getClass("data$Date")
class(data$DATA)
class(data$Date)
?as.Date
strptime(data$time)
?strptime
strptime(data$time, format="%H:%M:%S")
time=strptime(data$time, format="%H:%M:%S")
time=strptime(data$time, "%H:%M:%S")
time=data$Time
time=strptime(time, "%H:%M:%S")
date=strptime(data$Date, "%d:%b:%Y")
data1=data[-1,-2]
View(data1)
View(data)
View(data1)
data1=data[-1]
View(data1)
data1=data[-1:2]
data1=data[-1,-2]
View(data1)
data1=data[c(-1,-2)]
View(data1)
data1=c(strptime(data$Time, "%H:%M:%S"),strptime(data$Date, "%d:%b:%Y"), data[c(-1,-2)])
data1=c(date, time, data[c(-1,-2)])
data$Date=strptime(data$Time, "%H:%M:%S")
View(data)
data = read.delim("household_power_consumption.txt", sep=";")
data1=c(strptime(data$Date, "%d:%b:%Y"),strptime(data$Time, "%H:%M:%S"), data[c(-1,-2)])
data = read.delim("household_power_consumption.txt", sep=";")
data$Date=strptime(data$Date, "%d:%b:%Y")
data$Time=strptime(data$Time, "%H:%M:%S")
View(data)
?rand
?runif
runif(2)
runif(9)
runif(1)
0.634*6
0.571*6
runif(10)
runif(10)
runif(10)
runif(10)
runif(10)
runif(10)
libraru('swirl')
library('swirl')
swirl()
?
exit
exit()
swirl()
library("swirl")
swirl()
table(flags$landmass)
table(flags$animate)
tapply(flags$animate,flags$landmass, mean)
tapply(flags$population,flags$red, summary)
tapply(flags$landmass,flags$population, summary)
tapply(flags$population,flags$landmass, summary)
ls
ls()
ls
ls()
ws()
?ws()
swirl()
library(swirl)
swirl()
install_from_swirl("Exploratory Data Analysis")
swirl()
?ggplot2()
library(ggplot2)
??ggplot2
install.packages("ggplot2")
swirl()
if(!require(installr)) {
install.packages("installr"); require(installr)}
updataR()
updateR()
download.packages("swirl")
install.packages("rbase")
download.packages("swirl")
install.packages("rbase")
install.packages("r-base")
getwd()
setwd("C:/Users/Kelby/Documents/Coursera/Exploratory Data Analysis/Peer Review 1")
plot4()
source('~/Coursera/Exploratory Data Analysis/Peer Review 1/Plot 4.R')
plot4()
plot4()
source('~/Coursera/Exploratory Data Analysis/Peer Review 1/Plot 4.R')
source('~/Coursera/Exploratory Data Analysis/Peer Review 1/Plot 3.R')
source('~/Coursera/Exploratory Data Analysis/Peer Review 1/Plot 2.R')
source('~/Coursera/Exploratory Data Analysis/Peer Review 1/Plot 1.R')
source('~/Coursera/Exploratory Data Analysis/Peer Review 1/Plot 1.R')
getwd()
